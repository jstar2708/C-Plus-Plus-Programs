QUESTION-->
Given an array A of N elements. Find the majority element in the array. A majority element 
in an array A of size N is an element that appears more than N/2 times in the array.
 
Example 1:

Input:
N = 3 
A[] = {1,2,3} 
Output:
-1
Explanation:
Since, each element in 
{1,2,3} appears only once so there 
is no majority element.
Example 2:

Input:
N = 5 
A[] = {3,1,3,3,2} 
Output:
3
Explanation:
Since, 3 is present more
than N/2 times, so it is 
the majority element.


(Using Mooreâ€™s Voting Algorithm):   


Approach: This is a two-step process. 
The first step gives the element that maybe the majority element in the array. 
If there is a majority element in an array, then this step will definitely return majority element,
 otherwise, it will return candidate for majority element.
Check if the element obtained from the above step is majority element. 
This step is necessary as there might be no majority element.
 
Algorithm: 
Loop through each element and maintains a count of majority element, and a majority index, maj_index
If the next element is same then increment the count if the next element is not same then decrement the count.
if the count reaches 0 then changes the maj_index to the current element and set the count again to 1.
Now again traverse through the array and find the count of majority element found.
If the count is greater than half the size of the array, print the element
Else print that there is no majority element

CODE--->
-------------------------------------------------------------------------------------------------------------------------------------------------------------
int majorityElement(int arr[], int n)
    {
        
        int maj = 0;
        int count = 1;
        for(int i = 1;i<n;i++){
            if(arr[maj]==arr[i]){
                count++;
            }
            else{
                count--;
            }
            if(count==0){
                maj = i;
                count = 1;
            }
        }
        count = 0;
        for(int i = 0;i<n;i++){
            if(arr[maj]==arr[i]){
                count++;
            }
        }
        if(count>(n/2)){
            return arr[maj];
        }
        return -1;
        
    }
-------------------------------------------------------------------------------------------------------------------------------------------------------------