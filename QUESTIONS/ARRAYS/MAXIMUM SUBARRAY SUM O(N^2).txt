QUESTION--->
Given an array arr of N integers. Find the contiguous sub-array with maximum sum.
Example 1:

Input:			Explanation:
N = 4				Max subarray sum is 13
arr[] = {-1,4,7,2}		of elements (4,7,2) which
Output:				is a contiguous subarray
13
Example 2:

Input:				Explanation:	
N = 4					Max subarray sum is -1.
arr[] = {-1,-2,-3,-4}
Output:
-1		

APPROACH--->
USING PREFIX SUM
traverse the array and intialize sum = 0 for each iteration and then calculate the sum of each subarray
intialize mx = INT_MIN and update mx with sum if sum>mx

CODE-->
------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<bits/stdc++.h>
using namespace std;

int main(){
	int n;
	cin>>n;
	int arr[n];
	for(int i = 0;i<n;i++){
		cin>>arr[i];
	}
	//finding maximum subarray sum in o(n^2) complexity
	int mx = INT_MIN;
	for(int i = 0;i<n;i++){
		int sum = 0;
		for(int j = i;j<n;j++){
			sum = sum + arr[j];
			mx = max(sum,mx);
		}
	}
	cout<<mx<<endl;
	return 0;
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------			